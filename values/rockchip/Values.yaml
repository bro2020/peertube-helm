# # Default values for peertube.
# # This is a YAML-formatted file.
# # Declare variables to be passed into your templates.
#
namespace: peertube
defaultName: prod
env: rockchip # "intel" or "rockchip"
tz: Europe/Kyiv
#
# # This is to override the chart name.
# nameOverride: ""
# fullnameOverride: ""
#
# proxy:
#   image:
#     name: "nginx"
#     tag: "stable-alpine"
#     pullPolicy: Always
#   replicaCount: 1
#   nodeSelector: {}
#   tolerations: []
#   affinity: {}
#   imagePullSecrets: []
#   podAnnotations: {}
#   podLabels: {}
#   podSecurityContext: {}
#   securityContext: {}
#     # capabilities:
#     #   drop:
#     #   - ALL
#     # readOnlyRootFilesystem: true
#     # runAsNonRoot: true
#     # runAsUser: 1000
#   service:
#     # type: LoadBalancer
#     type: NodePort
#     ports:
#     - name: http
#       port: 80
#       targetPort: http
#       protocol: TCP
#       nodePort: 3080
#     - name: https
#       port: 443
#       targetPort: https
#       protocol: TCP
#       nodePort: 3443
#   resources: {}
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi
#   volumeMounts: []
#   livenessProbe:
#     tcpSocket:
#       port: 80
#   readinessProbe:
#     exec:
#       command:
#       - curl
#       - "http://localhost:9000/api/v1/ping"
#   volumes: []
#
# node:
#   image:
#     name: "bro2020/peertube-rockchip"
#     tag: "latest"
#     pullPolicy: Always
#   replicaCount: 1
#   nodeSelector: {}
#   tolerations: []
#   affinity: {}
#   imagePullSecrets: []
#   podAnnotations: {}
#   podLabels: {}
#   podSecurityContext: {}
#   securityContext: {}
#     # capabilities:
#     #   drop:
#     #   - ALL
#     # readOnlyRootFilesystem: true
#     # runAsNonRoot: true
#     # runAsUser: 1000
#   service:
#     type: ClusterIP
#     ports:
#     - name: peertube
#       port: 9000
#       targetPort: peertube
#       protocol: TCP
#   serviceRtmp:
#     type: NodePort
#     ports:
#     - name: rtmp
#       port: 1935
#       targetPort: rtmp
#       protocol: TCP
#       nodePort: 1935
#     - name: rtmps
#       port: 1936
#       targetPort: rtmps
#       protocol: TCP
#       nodePort: 1936
#   resources: {}
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi
#   volumeMounts: []
#   livenessProbe:
#     tcpSocket:
#       port: 9000
#   readinessProbe:
#     exec:
#       command:
#       - curl
#       - "http://localhost:9000/api/v1/ping"
#   volumes: []
#
# pg:
#   image:
#     name: "postgres"
#     tag: "17-bookworm"
#     pullPolicy: Always
#   replicaCount: 1
#   nodeSelector: {}
#   tolerations: []
#   affinity: {}
#   imagePullSecrets: []
#   podAnnotations: {}
#   podLabels: {}
#   podSecurityContext: {}
#   securityContext: {}
#     # capabilities:
#     #   drop:
#     #   - ALL
#     # readOnlyRootFilesystem: true
#     # runAsNonRoot: true
#     # runAsUser: 1000
#   service:
#     type: ClusterIP
#     ports:
#     - name: pg
#       port: 5432
#       targetPort: pg
#       protocol: TCP
#   resources: {}
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi
#   volumeMounts: []
#   livenessProbe:
#     tcpSocket:
#       port: 5432
#   readinessProbe:
#     tcpSocket:
#       port: 5432
#   # Need set "storage" and "volumes" or "hostPath"
#   volumes: []
#   storage: {}
#     # pgData:
#     #   accessModes: ReadWriteMany
#     #   storageSize: 1G
#     #   storageClassName: lvm-storage
#   hostPath:
#     pgData:
#       path: "/mnt/peertube/pg"
#
# redis:
#   image:
#     name: "redis"
#     tag: "7-bookworm"
#     pullPolicy: Always
#   replicaCount: 1
#   nodeSelector: {}
#   tolerations: []
#   affinity: {}
#   imagePullSecrets: []
#   podAnnotations: {}
#   podLabels: {}
#   podSecurityContext: {}
#   securityContext: {}
#     # capabilities:
#     #   drop:
#     #   - ALL
#     # readOnlyRootFilesystem: true
#     # runAsNonRoot: true
#     # runAsUser: 1000
#   service:
#     type: ClusterIP
#     ports:
#     - name: redis
#       port: 6379
#       targetPort: redis
#       protocol: TCP
#   resources: {}
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi
#   volumeMounts: []
#   livenessProbe:
#     tcpSocket:
#       port: 6379
#   readinessProbe:
#     tcpSocket:
#       port: 6379
#   # Need set "storage" and "volumes" or "hostPath"
#   volumes: []
#   storage: {}
#     # redisData:
#     #   accessModes: ReadWriteMany
#     #   storageSize: 1G
#     #   storageClassName: lvm-storage
#   hostPath:
#     redisData:
#       path: "/mnt/peertube/redis"
#
# postfix:
#   image:
#     name: "mwader/postfix-relay"
#     tag: "latest"
#     pullPolicy: Always
#   replicaCount: 1
#   nodeSelector: {}
#   tolerations: []
#   affinity: {}
#   imagePullSecrets: []
#   podAnnotations: {}
#   podLabels: {}
#   podSecurityContext: {}
#   securityContext: {}
#     # capabilities:
#     #   drop:
#     #   - ALL
#     # readOnlyRootFilesystem: true
#     # runAsNonRoot: true
#     # runAsUser: 1000
#   service:
#     type: ClusterIP
#     ports:
#     - name: smtp
#       port: 25
#       targetPort: smtp
#       protocol: TCP
#   resources: {}
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi
#   volumeMounts: []
#   livenessProbe:
#     exec:
#       command:
#       - postfix
#       - status
#   readinessProbe: {}
#     # exec:
#     #   command:
#     #   - postfix
#     #   - status
#   # Can be set "storage" and "volumes" or "hostPath"
#   volumes: []
#   storage: {}
#     # postfixData:
#     #   accessModes: ReadWriteMany
#     #   storageSize: 1G
#     #   storageClassName: lvm-storage
#   hostPath:
#     postfixData:
#       path: "/mnt/peertube/postfix"
#
# runner:
#   image:
#     name: "bro2020/peertube-runner-rockchip"
#     tag: "latest"
#     pullPolicy: Always
#   replicaCount: 0
#   nodeSelector: {}
#   tolerations: []
#   affinity: {}
#   imagePullSecrets: []
#   podAnnotations: {}
#   podLabels: {}
#   podSecurityContext: {}
#   securityContext: {}
#     # capabilities:
#     #   drop:
#     #   - ALL
#     # readOnlyRootFilesystem: true
#     # runAsNonRoot: true
#     # runAsUser: 1000
#   service: {}
#   resources: {}
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi
#   volumeMounts: []
#   livenessProbe: {}
#   readinessProbe: {}
#   # Need set "storage" and "volumes" or "hostPath"
#   volumes: []
#   storage: {}
#     # runnerData:
#     #   accessModes: ReadWriteMany
#     #   storageSize: 1G
#     #   storageClassName: lvm-storage
#   hostPath:
#     runnerData:
#       path: "/mnt/peertube/runner"
#
# # This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Automatically mount a ServiceAccount's API credentials?
#   automount: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""
#
# # This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local
#
# # This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80
#
# # cert-manager params
# certManager:
#   enable: true
#   namespace: cert-manager
#
# # Common assets and node data storage
# assets:
#   ## Need set "storage" or "hostPath"
#   storage: {}
#     # accessModes: ReadWriteMany
#     # storageSize: 1G
#     # storageClassName: lvm-storage
#   hostPath:
#     path: "/mnt/peertube/assets"
# data:
#   ## Need set "storage" or "hostPath"
#   storage: {}
#     # accessModes: ReadWriteMany
#     # storageSize: 1G
#     # storageClassName: lvm-storage
#   hostPath:
#     path: "/mnt/peertube/data"
# config:
#   ## Need set "storage" or "hostPath"
#   storage: {}
#     # accessModes: ReadWriteMany
#     # storageSize: 1G
#     # storageClassName: lvm-storage
#   hostPath:
#     path: "/mnt/peertube/config"
