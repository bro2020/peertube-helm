apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "peertube.pg.fullname" . }}
  namespace: {{ include "peertube.namespace" . }}
  labels:
    {{- include "peertube.pg.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.pg.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "peertube.pg.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "peertube.pg.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.pg.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "peertube.serviceAccountName" . }}
      {{- with .Values.pg.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: proxy
        {{- with .Values.pg.PodSecurityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        image: "{{ .Values.pg.image.name }}:{{ .Values.pg.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.pg.image.pullPolicy }}
        ports:
        {{- range .Values.pg.service.ports }}
        {{- if or (typeIsLike "int" .targetPort) (typeIsLike "int64" .targetPort) (typeIsLike "float64" .targetPort) }}
        - name: {{ default "unknown" .name }}
          containerPort: {{ .targetPort }}
        {{- else }}
        - name: {{ default .name .targetPort }}
          containerPort: {{ .port }}
        {{- end }}
          protocol: {{ .protocol | default "TCP" }}
        {{- end }}
        {{- with .Values.pg.livenessProbe }}
        livenessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.pg.readinessProbe }}
        readinessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.pg.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: pg-data
          mountPath: "/var/lib/postgresql/data"
        {{- with .Values.pg.volumeMounts }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
      volumes:
      - name: pg-data
        {{- if (hasKey .Values.pg.hostPath "pgData") }}
        hostPath:
          path: "{{ .Values.pg.hostPath.pgData.path }}"
          type: Directory
        {{- else }}
        persistentVolumeClaim:
          claimName: {{ include "peertube.pg.fullname" . }}-data
        {{- end }}
      {{- with .Values.pg.volumes }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.pg.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.pg.affinity }}
      affinity:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.pg.tolerations }}
      tolerations:
        {{- toYaml . | nindent 6 }}
      {{- end }}
